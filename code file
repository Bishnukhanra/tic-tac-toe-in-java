import java.util.*;
public class Main {
    static char[][] board = {
            {' ', ' ', ' '},
            {' ', ' ', ' '},
            {' ', ' ', ' '}
    };
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        char currentPlayer = 'X';
        boolean gameEnded = false;

        while (!gameEnded) {
            printBoard();
            int row = -1, col = -1;
            
            // Get the row and column from the player
            while (true) {
                System.out.println("Player " + currentPlayer + ", enter your move (row and column): ");
                row = scanner.nextInt() - 1;
                col = scanner.nextInt() - 1;

                if (row < 0 || col < 0 || row > 2 || col > 2) {
                    System.out.println("This move is out of bounds. Please try again.");
                } else if (board[row][col] != ' ') {
                    System.out.println("This cell is already taken. Please try again.");
                } else {
                    break;
                }
            }
            // Place the move on the board
            board[row][col] = currentPlayer;
            // Check if the current player has won
            
            gameEnded = checkWin(currentPlayer);
            if (gameEnded) {
                printBoard();
                System.out.println("Player " + currentPlayer + " wins!");
            } else {
                // Check for a tie
                if (isBoardFull()) {
                    printBoard();
                    System.out.println("The game is a tie!");
                    gameEnded = true;
                } else {
                    // Switch players
                    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
                }
            }
        }
    }

    // Print the game board
    static void printBoard() {
        System.out.println("  1 2 3");
        for (int i = 0; i < 3; i++) {
            System.out.print((i + 1) + " ");
            for (int j = 0; j < 3; j++) {
                System.out.print(board[i][j]);
                if (j < 2) System.out.print("|");
            }
            System.out.println();
            if (i < 2) {
                System.out.println("  -----");
            }
        }
    }

    // Check if the current player has won
    static boolean checkWin(char player) {
        // Check rows
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
                return true;
            }
        }
        // Check columns
        for (int i = 0; i < 3; i++) {
            if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
                return true;
            }
        }
        // Check diagonals
        if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
            return true;
        }
        if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
            return true;
        }
        return false;
    }

    // Check if the board is full
    static boolean isBoardFull() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == ' ') {
                    return false;
                }
            }
        }
        return true;
    }
}
